{"version":3,"sources":["scripts/main.js"],"names":["boardSize","max","counterMove","score","gameOver","gameStart","blockHeader","document","querySelector","blockField","blockMessage","buttonStart","checkEmptyCells","querySelectorAll","length","classList","remove","deleteCombineClass","cells","i","move","direction","rows","operation","row","j","checkCeil","ceil","textContent","moveCeil","currentCeil","nextCeil","nextElementSibling","previousElementSibling","nextRowUp","parentElement","cellIndex","nextRowDown","contains","replaceCeil","combineCeil","add","clearCeil","newValue","Number","className","init","randomData","getRandomDataCeil","randomCeil","Math","floor","random","addNumber","number","addEventListener","e","eventObj","preventDefault","keyCode","code","toLowerCase","slice"],"mappings":"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","file":"main.d9850000.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst boardSize = 4;\nconst max = boardSize - 1;\nlet counterMove = 0;\nlet score = 0;\nlet gameOver = false;\nlet gameStart = false;\n\nconst blockHeader = document.querySelector('.game-header');\nconst blockField = document.querySelector('.game-field');\nconst blockMessage = document.querySelector('.message-container');\nconst buttonStart = blockHeader.querySelector('.start');\n\nbuttonStart.addEventListener('click', (e) => {\n  if (gameStart) {\n    return false;\n  }\n\n  const rows = blockField.querySelectorAll('.field-row');\n\n  init();\n\n  document.addEventListener('keydown', (eventObj) => {\n    eventObj.preventDefault();\n\n    if (gameOver) {\n      return false;\n    }\n\n    if (eventObj.keyCode < 37 && eventObj.keyCode > 40) {\n      return false;\n    }\n\n    const direction = eventObj.code.toLowerCase().slice(5);\n\n    if (move(direction, rows)) {\n      counterMove++;\n      addNumber();\n      checkEmptyCells();\n      deleteCombineClass();\n    }\n\n    blockHeader.querySelector('.game-score').textContent = score;\n\n    if (counterMove === 1) {\n      buttonStart.classList.add('restart');\n    }\n  });\n});\n\nfunction checkEmptyCells() {\n  const emptyField = blockField.querySelectorAll('[class*=field-cell--]');\n\n  if (emptyField.length === 16) {\n    gameOver = true;\n    blockMessage.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction deleteCombineClass() {\n  const cells = blockField.querySelectorAll('.ceil-combine');\n\n  if (cells.length > 0) {\n    for (let i = 0; i < cells.length; i++) {\n      cells[i].classList.remove('ceil-combine');\n    }\n  }\n}\n\nfunction move(direction, rows) {\n  let operation = 0;\n\n  if (direction === 'down') {\n    for (let i = max - 1; i >= 0; i--) {\n      const row = rows[i];\n      const cells = row.cells;\n\n      for (let j = 0; j <= max; j++) {\n        checkCeil(cells[j]);\n      }\n    }\n  } else {\n    for (let i = 0; i <= max; i++) {\n      const row = rows[i];\n      const cells = row.cells;\n\n      if (direction === 'right') {\n        for (let j = max - 1; j >= 0; j--) {\n          checkCeil(cells[j]);\n        }\n      }\n\n      if (direction === 'left') {\n        for (let j = 1; j <= max; j++) {\n          checkCeil(cells[j]);\n        }\n      }\n\n      if (direction === 'up') {\n        if (i === 0) {\n          continue;\n        }\n\n        for (let j = 0; j <= max; j++) {\n          checkCeil(cells[j]);\n        }\n      }\n    }\n  }\n\n  return !!(operation);\n\n  function checkCeil(ceil) {\n    if (ceil.textContent !== '') {\n      if (moveCeil(direction, ceil)) {\n        operation++;\n      }\n    }\n  }\n}\n\nfunction moveCeil(direction, currentCeil) {\n  let nextCeil = null;\n\n  switch (direction) {\n    case 'right':\n      nextCeil = currentCeil.nextElementSibling;\n      break;\n\n    case 'left':\n      nextCeil = currentCeil.previousElementSibling;\n      break;\n\n    case 'up':\n      const nextRowUp = currentCeil.parentElement.previousElementSibling;\n\n      if (nextRowUp) {\n        const nextRowCells = nextRowUp.cells;\n\n        nextCeil = nextRowCells[currentCeil.cellIndex];\n      }\n      break;\n\n    case 'down':\n      const nextRowDown = currentCeil.parentElement.nextElementSibling;\n\n      if (nextRowDown) {\n        const nextRowCells = nextRowDown.cells;\n\n        nextCeil = nextRowCells[currentCeil.cellIndex];\n      }\n      break;\n  }\n\n  if (!nextCeil) {\n    return false;\n  }\n\n  if (currentCeil.textContent === nextCeil.textContent) {\n    if (!currentCeil.classList.contains('ceil-combine')\n      || !nextCeil.classList.contains('ceil-combine')) {\n      combineCeil(currentCeil, nextCeil);\n\n      return true;\n    }\n  }\n\n  if (nextCeil.textContent === '') {\n    replaceCeil(direction, currentCeil, nextCeil);\n\n    return true;\n  }\n}\n\nfunction replaceCeil(direction, currentCeil, nextCeil) {\n  nextCeil.textContent = currentCeil.textContent;\n  nextCeil.classList.add('field-cell--' + currentCeil.textContent);\n  clearCeil(currentCeil);\n\n  moveCeil(direction, nextCeil);\n}\n\nfunction combineCeil(currentCeil, nextCeil) {\n  const newValue = Number(currentCeil.textContent) * 2;\n\n  nextCeil.textContent = newValue;\n  nextCeil.className = 'field-cell field-cell--' + newValue;\n  nextCeil.classList.add('ceil-combine');\n  clearCeil(currentCeil);\n  score += newValue;\n\n  if (newValue === 2048) {\n    gameOver = true;\n    blockMessage.querySelector('.message-win').classList.remove('hidden');\n  }\n}\n\nfunction init() {\n  gameStart = true;\n\n  blockMessage.querySelector('.message-start').classList.add('hidden');\n\n  const randomData = getRandomDataCeil();\n  const rows = blockField.rows;\n  const cells = rows[randomData[0]].cells;\n  const randomCeil = cells[randomData[1]];\n\n  randomCeil.textContent = 2;\n  randomCeil.classList.add('field-cell--2');\n}\n\nfunction getRandomDataCeil() {\n  const randomRow = Math.floor(Math.random() * boardSize);\n  const randomCeil = Math.floor(Math.random() * boardSize);\n\n  return [randomRow, randomCeil];\n}\n\nfunction addNumber() {\n  const randomData = getRandomDataCeil();\n  const rows = blockField.rows;\n  const cells = rows[randomData[0]].cells;\n  const randomCeil = cells[randomData[1]];\n\n  const rand = Math.floor(Math.random() * 10) + 1;\n  const number = (rand > 1) ? 2 : 4;\n\n  if (randomCeil.textContent === '') {\n    randomCeil.textContent = number;\n    randomCeil.classList.add('field-cell--' + number);\n  } else {\n    addNumber();\n  }\n}\n\nfunction clearCeil(ceil) {\n  ceil.textContent = '';\n  ceil.className = 'field-cell';\n}\n"]}